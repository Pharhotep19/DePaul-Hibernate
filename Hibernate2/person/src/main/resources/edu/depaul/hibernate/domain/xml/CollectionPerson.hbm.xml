<!DOCTYPE hibernate-mapping PUBLIC
  "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
  "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
  <class name="edu.depaul.hibernate.domain.xml.CollectionPerson" table="Person">
    <id name="id" type="long" column="id">
      <generator class="native"/>
    </id>
    <property name="firstName" column="first_name" type="string" />
    <property name="middleInitial" column="middle_initial" type="string" length="1" />
    <property name="lastName" column="last_name" type="string" />
    <property name="birthdate" column="birthdate" type="date" />
    <property name="ssn" column="ssn" type="string" unique="true" length="11"/>

	<set name="nicknames" table="nicknames">
		<key column="person_id"/>
		<element type="string" column="name" not-null="true"/>
	</set>
	<!--

	 uses order by in sql
	<set name="nicknames2" table="nicknames2" order-by="name">
		<key column="person_id"/>
		<element type="string" column="name" not-null="true"/>
	</set>

	--><!-- sorted in memory using a comparator object java.util.Set
	<set name="nicknames2" table="nicknames" sort="edu.depaul.hibernate.SortString">
		<key column="person_id"/>
		<element type="string" column="name" not-null="true"/>
	</set> -->

	<!-- list of children in order specified by the order column java.util.List
	<list name="children" table="children">
		<key column="person_id"/>
		<list-index column="order"/>
		<element type="string" column="name" not-null="true"/>
	</list> -->

	<!-- generic collection of friends unordered java.util.Collection
	<bag name="friends" table="friends">
		<key column="person_id"/>
		<element type="string" column="name" not-null="true"/>
	</bag> -->

	<!-- map of values java.util.Map
	<map name="family" table="family">
		<key column="person_id"/>
		<map-key column="role" type="string"/>

		<element type="string" column="name" not-null="true"/>
	</map> -->
  </class>
</hibernate-mapping>